#include <ESP8266WiFi.h>
#include <FirebaseArduino.h>
#include "UbidotsMicroESP8266.h"
#include "MQ135.h"
// Firebase
#define FIREBASE_HOST "air-o-spy.firebaseio.com"
#define FIREBASE_AUTH "HgPiJ069aCy0tZHxIEFy8iHDS2D9n5tzVFSvtD71"
#define WIFI_SSID "Harshi"
#define WIFI_PASSWORD "harshi06"
//int sound= D5;
int soundDetectedPin = D5; 
int soundDetectedVal = HIGH; // This is where we record our Sound Measurement
boolean bAlarm = false;
unsigned long lastSoundDetectTime; // Record the time that we measured a sound
int soundAlarmTime = 500; // Number of milli seconds to keep the sound alarm high
//int soundvalue;
//Ubidots
#define ID  "5d3fd270c03f97154ff09f7c"  // Put here your Ubidots variable ID
#define TOKEN  "A1E-Rc6nss2p3k6MwW5e9Jc7qNqI1ZO2xL"  // Put here your Ubidots TOKEN
#define WIFISSID "Harshi" // Put here your Wi-Fi SSID
#define PASSWORD "harshi06" // Put here your Wi-Fi password
MQ135 gasSensor = MQ135(A0);

//int old_val=0;
Ubidots client(TOKEN);
char soundlevel[10]="Ambient";

void setup() {
   // pinMode(D5,OUTPUT);
    //digitalWrite(D5,LOW);
    Serial.begin(9600);
    client.wifiConnection(WIFISSID, PASSWORD);
    //client.setDebug(true); // Uncomment this line to set DEBUG on
    pinMode (soundDetectedPin, INPUT) ; // input from the Sound Detection Module
   // pinMode(sound,INPUT);
   // connect to wifi.
   WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
   Serial.print("connecting");
   while (WiFi.status() != WL_CONNECTED) {
   Serial.print(".");
    Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
   Firebase.set("soundlevel","AMbient");
   Firebase.set("rzero",0);

    delay(500);
    }
}
void firebasereconnect(){
  Serial.println("Trying to reconnect");
    Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);

  }
void sound() 
{
 // set value
  // handle error
  if (Firebase.failed()) {
      Serial.print("setting number failed:");
      Serial.println(Firebase.error());  
      firebasereconnect();
     // ESP.reset();
      return;
      delay(1000);
      
  }

//soundvalue=analogRead(A0);
soundDetectedVal = digitalRead (soundDetectedPin) ; // read the sound alarm time
  
  if (soundDetectedVal == LOW) // If we hear a sound
  {
  
    lastSoundDetectTime = millis(); // record the time of the sound alarm
    // The following is so you don't scroll on the output screen
    //if (!bAlarm){
     soundlevel="Loud";
      Serial.println("LOUD");
     // bAlarm = true;
  //  }
  }
  else
  {
    if( (millis()-lastSoundDetectTime) > soundAlarmTime ) //&&  bAlarm){
      Serial.println("Ambient");
      soundlevel="Ambient";
      //bAlarm = false;
    }
    //client.add("soundlevel",soundlevel);
    Firebase.set("soundlevel",soundlevel);
  }
void gas()
{
  // set value
float rzero = gasSensor.getRZero(); //this to get the rzero value, uncomment this to get ppm value
  float ppm = gasSensor.getPPM(); // this to get ppm value, uncomment this to get rzero value
  Serial.println(rzero); // this to display the rzero value continuously, uncomment this to get ppm value
  //Serial.println(ppm); // this to display the ppm value continuously, uncomment this to get rzero value
  client.add("GAS",rzero);
  client.sendAll(true);
  Firebase.set("rzero",rzero);
   delay(100);
  }

  void loop()
  {
    sound();
    gas();
    delay(1000);
  }
 
